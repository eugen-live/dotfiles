:set number
:set relativenumber
:set scrolloff=999
:set ignorecase
:set smartcase

:set completeopt-=preview " For No Previews
syntax on
filetype on

nnoremap <SPACE> <Nop>
let mapleader = " "
inoremap jk <Esc>

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')
	Plug 'easymotion/vim-easymotion'
	Plug 'https://github.com/vim-airline/vim-airline' " Status bar
	Plug 'https://github.com/preservim/nerdtree' " NerdTree
	Plug 'https://github.com/ryanoasis/vim-devicons' " Developer Icons
	Plug 'https://github.com/tc50cal/vim-terminal' " Vim Terminal
	Plug 'https://github.com/preservim/tagbar' " Tagbar for code navigation
	Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
	if has('nvim')
		Plug 'nvim-lua/plenary.nvim'
		Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.1' }
		Plug 'https://github.com/neoclide/coc.nvim'  " Auto Completion
	endif
call plug#end()

map <Leader> <Plug>(easymotion-prefix)

nnoremap <C-f> :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-l> :call CocActionAsync('jumpDefinition')<CR>

nmap <F8> :TagbarToggle<CR>

if has('nvim')
	" Find files using Telescope command-line sugar.
	nnoremap <leader>ff <cmd>Telescope find_files<cr>
	nnoremap <leader>fg <cmd>Telescope live_grep<cr>
	nnoremap <leader>fb <cmd>Telescope buffers<cr>
	nnoremap <leader>fh <cmd>Telescope help_tags<cr>

	"let g:go_highlight_function_calls = 1
	"let g:go_highlight_operators = 1
	let g:go_highlight_variable_declarations = 1
	let g:go_highlight_types = 1
	let g:go_highlight_functions = 1
endif
